name: Market Analysis 15m (Agent)

on:
  workflow_dispatch:
    inputs:
      symbols:
        description: "Kommagetrennte Symbole (z. B. EURUSD=X,GBPUSD=X)"
        required: false
        default: "EURUSD=X"
      tz:
        description: "Zeitzone (IANA, z. B. Europe/Berlin)"
        required: false
        default: "Europe/Berlin"
  schedule:
    - cron: "*/15 * * * *"   # alle 15 Minuten

jobs:
  run:
    runs-on: ubuntu-latest

    # ðŸ”´ ZENTRAL: Secrets + PYTHONPATH einmal fÃ¼r den GANZEN Job setzen
    env:
      PYTHONPATH: ${{ github.workspace }}
      SMTP_USER:  ${{ secrets.SMTP_USER }}
      SMTP_PASS:  ${{ secrets.SMTP_PASS }}
      EMAIL_TO:   ${{ secrets.EMAIL_TO }}
      SMTP_HOST:  ${{ secrets.SMTP_HOST }}
      SMTP_PORT:  ${{ secrets.SMTP_PORT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Fallbacks (falls requirements.txt mal schlanker ist)
          pip install python-dotenv pyyaml

      - name: Debug mail env (masked)
        run: |
          python - <<'PY'
          import os
          def mask(s): 
              return s if not s else (s[:2] + "***" + s[-2:])
          print("[env] EMAIL_TO   =", mask(os.getenv("EMAIL_TO")))
          print("[env] SMTP_USER  =", mask(os.getenv("SMTP_USER")))
          print("[env] SMTP_PASS? =", "JA" if os.getenv("SMTP_PASS") else "NEIN")
          print("[env] HOST/PORT  =", os.getenv("SMTP_HOST"), os.getenv("SMTP_PORT"))
          PY

      - name: Run AGENT (should send email)
        run: |
          set -euxo pipefail
          SYM="${{ github.event.inputs.symbols || 'EURUSD=X' }}"
          TZV="${{ github.event.inputs.tz || 'Europe/Berlin' }}"
          echo "[run] symbols=$SYM tz=$TZV"
          python -u agent.py --symbols "$SYM" --tz "$TZV" --email
          echo "[AGENT_DONE] agent.py finished"

      # Sende IMMER eine kurze Ping-Mail â€“ beweist SMTP/Secrets im selben Job
      - name: Force Ping Mail (always)
        if: always()
        run: |
          python - <<'PY'
          import datetime
          from utils.emailer import send_email
          sub = f"[PING] Agent runner alive â€” {datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S UTC')}"
          html = "<p>Ping aus dem Agent-Workflow (gleicher Job, gleiche Secrets).</p>"
          ok = send_email(sub, html, [])
          print("[PING] result:", ok)
          PY

      - name: Upload charts (artifacts)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: charts
          path: reports/out/*.png
          if-no-files-found: ignore
